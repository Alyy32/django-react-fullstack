# Generated by Django 5.0.7 on 2025-08-20 09:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('parent', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('attempt_type', models.CharField(choices=[('quiz', 'Quiz'), ('assignment', 'Assignment'), ('test', 'Test'), ('survey', 'Survey'), ('practice', 'Practice')], default='practice', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('score', models.FloatField(blank=True, help_text='Score achieved (0-100)', null=True)),
                ('max_score', models.FloatField(default=100.0, help_text='Maximum possible score')),
                ('time_limit', models.IntegerField(blank=True, help_text='Time limit in minutes', null=True)),
                ('time_spent', models.IntegerField(blank=True, help_text='Time spent in minutes', null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('answers', models.JSONField(blank=True, default=dict, help_text='User answers in JSON format')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the attempt')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Attempt',
                'verbose_name_plural': 'Attempts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AttemptQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay'), ('numeric', 'Numeric')], max_length=20)),
                ('options', models.JSONField(blank=True, default=list, help_text='Answer options in JSON format')),
                ('correct_answer', models.TextField(help_text='Correct answer or answer key')),
                ('user_answer', models.TextField(blank=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('points_awarded', models.FloatField(default=0.0)),
                ('max_points', models.FloatField(default=1.0)),
                ('order', models.PositiveIntegerField(default=1)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='parent.attempt')),
            ],
            options={
                'verbose_name': 'Attempt Question',
                'verbose_name_plural': 'Attempt Questions',
                'ordering': ['attempt', 'order'],
            },
        ),
    ]
